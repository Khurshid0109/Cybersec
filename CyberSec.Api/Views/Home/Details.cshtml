@model ArticleViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = Model.Title;
}

<div class="container mt-5">
    <div class="article-details2 text-center">
        <h1 class="title font-weight-bold article-title">@Model.Title</h1>
        <h4 class="category font-weight-bold mt-3">@Model.Category</h4>
        <p class="date text-muted">@Model.CreatedAt.ToString("MMM d, yyyy")</p>

        <div class="content mt-5">
            @foreach (var block in Model.Blocks.OrderBy(b => b.Order))
            {
                if (block is TextBlockViewModel textBlock)
                {
                    <p class="text-block mt-3 article-text" id="description">@textBlock.Text</p>
                }
                else if (block is ImageBlockViewModel imageBlock)
                {
                    <img src="@Url.Action("GetImage", "Media", new { fileName = imageBlock.ImageFilePath })" class="img-fluid mt-3" />
                }
                else if (block is VideoBlockViewModel videoBlock)
                {
                    <video src="@Url.Action("GetVideo", "Media", new { fileName = videoBlock.VideoFilePath })" controls class="img-fluid mt-3"></video>
                }
                else if (block is CodeBlockViewModel codeBlock)
                {
                    <pre class="code-block mt-3 code-text"><code>@codeBlock.Code</code></pre>
                }
            }
        </div>
        <div style="width: 100%;">
            <div class="detail-actions">
                <button class="views">
                    @Model.ViewCount views
                </button>
                <div style="display: flex; gap: 20px;">
                    <button class="comment-btn" id="comment-btn">
                        Comments
                    </button>
                    <button id="like-btn">
                        <img id="like-image" src="~/SiteImages/like.svg" alt="Like Button" />
                    </button>
                </div>

            </div>
            <div class="comments">
                <p class="comment-text">Matn kiritishning har ikki tomoniga matn, tugmalar yoki tugma guruhlari, maxsus tanlovlar va maxsus fayl kiritishlari qoʻshish orqali shakl boshqaruvlarini osongina kengaytiring.</p>
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Write..." aria-label="Recipient's username" aria-describedby="basic-addon2">
                    <button class="input-group-text" id="basic-addon2">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the button and image element
        const likeButton = document.getElementById('like-btn');
        const likeImage = document.getElementById('like-image');

        //  Article ID for the API request
        const articleId = '@Model.Id';  

        // Function to toggle like status
        function toggleLikeStatus() {
            fetch(`/api/Home/ToggleLikeStatus?articleId=${articleId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
                .then(response => {
                    console.log("response", response);
                    return response.json();
                })
                .then(data => {
                    // Check the like status in the response
                    if (data.isLiked) {
                        // User liked the article, change the image to Like2.jpg
                        likeImage.src = '/SiteImages/like2.svg';
                    } 
                    else {
                        // User unliked the article, change the image to Like.jpg
                        likeImage.src = '/SiteImages/like.svg';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Add an event listener to the like button
        likeButton.addEventListener('click', function () {
            toggleLikeStatus();
        });

        // Call API on page load to set the initial image state
        fetch(`/api/Home/toggle?articleId=${articleId}`)
            .then(response => response.json())
            .then(data => {
                if (data.isLiked) {
                    likeImage.src = '/SiteImages/like2.svg'; 
                } else {
                    likeImage.src = '/SiteImages/like.svg'; 
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });
</script>
